[{"/Users/eugene/Desktop/eleonkov/car-owners/frontend/src/index.js":"1","/Users/eugene/Desktop/eleonkov/car-owners/frontend/src/App.js":"2"},{"size":219,"mtime":1611406501761,"results":"3","hashOfConfig":"4"},{"size":1588,"mtime":1611476374777,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"10ef4ia",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/eugene/Desktop/eleonkov/car-owners/frontend/src/index.js",[],["12","13"],"/Users/eugene/Desktop/eleonkov/car-owners/frontend/src/App.js",["14","15"],"import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nconst App = () => {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    if (window._sharedData) {\n      setState(window._sharedData)\n    }\n  }, []);\n\n  const renderContentCard = (type, sortBy) => {\n    const sharedContent = state.sort((a, b) => b.insight[sortBy] - a.insight[sortBy])\n      .filter(edge => edge.typename === type);\n\n    return (\n      <div className=\"grid-container\">\n        {sharedContent.map(edge => (\n          <div key={edge.shortcode} class={`grid-item ${edge.typename}`}>\n            <span>Comments: {edge.insight.comments}<br/>Likes: {edge.insight.likes}</span>\n            <a target=\"_blank\" href={`https://www.instagram.com/p/${edge.shortcode}/`}>\n              <img src={edge.thumbnail} />\n            </a>\n          </div>\n        ))}\n      </div>\n    )\n  };\n\n  return (\n    <Tabs>\n      <TabList>\n        <Tab>Reels</Tab>\n        <Tab>Video</Tab>\n        <Tab>Sidecar</Tab>\n        <Tab>Image</Tab>\n      </TabList>\n      <TabPanel>\n        <h2>Reels</h2>\n        {renderContentCard(\"Reels\", \"likes\")}\n      </TabPanel>\n      <TabPanel>\n        <h2>Video</h2>\n        {renderContentCard(\"GraphVideo\", \"views\")}\n      </TabPanel>\n      <TabPanel>\n        <h2>Sidecar</h2>\n        {renderContentCard(\"GraphSidecar\", \"likes\")}\n      </TabPanel>\n      <TabPanel>\n        <h2>Image</h2>\n        {renderContentCard(\"GraphImage\", \"likes\")}\n      </TabPanel>\n    </Tabs>\n  )\n}\n\nexport default App;\n",{"ruleId":"16","replacedBy":"17"},{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","severity":1,"message":"21","line":23,"column":16,"nodeType":"22","endLine":23,"endColumn":31},{"ruleId":"23","severity":1,"message":"24","line":24,"column":15,"nodeType":"25","endLine":24,"endColumn":43},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]